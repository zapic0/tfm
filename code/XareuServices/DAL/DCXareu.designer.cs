#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XareuServices.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="XareuDB")]
	public partial class DCXareuDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertgroup(group instance);
    partial void Updategroup(group instance);
    partial void Deletegroup(group instance);
    partial void Insertvote(vote instance);
    partial void Updatevote(vote instance);
    partial void Deletevote(vote instance);
    partial void Insertgroup_in_publication(group_in_publication instance);
    partial void Updategroup_in_publication(group_in_publication instance);
    partial void Deletegroup_in_publication(group_in_publication instance);
    partial void Insertgroup_join_request(group_join_request instance);
    partial void Updategroup_join_request(group_join_request instance);
    partial void Deletegroup_join_request(group_join_request instance);
    partial void Insertgroups_users_subscription(groups_users_subscription instance);
    partial void Updategroups_users_subscription(groups_users_subscription instance);
    partial void Deletegroups_users_subscription(groups_users_subscription instance);
    partial void Insertplace_tag(place_tag instance);
    partial void Updateplace_tag(place_tag instance);
    partial void Deleteplace_tag(place_tag instance);
    partial void Insertplace_tag_in_publication(place_tag_in_publication instance);
    partial void Updateplace_tag_in_publication(place_tag_in_publication instance);
    partial void Deleteplace_tag_in_publication(place_tag_in_publication instance);
    partial void Insertplace_tag_users_subscription(place_tag_users_subscription instance);
    partial void Updateplace_tag_users_subscription(place_tag_users_subscription instance);
    partial void Deleteplace_tag_users_subscription(place_tag_users_subscription instance);
    partial void Inserttag(tag instance);
    partial void Updatetag(tag instance);
    partial void Deletetag(tag instance);
    partial void Inserttag_in_publication(tag_in_publication instance);
    partial void Updatetag_in_publication(tag_in_publication instance);
    partial void Deletetag_in_publication(tag_in_publication instance);
    partial void Inserttags_users_subscription(tags_users_subscription instance);
    partial void Updatetags_users_subscription(tags_users_subscription instance);
    partial void Deletetags_users_subscription(tags_users_subscription instance);
    partial void Inserttoken(token instance);
    partial void Updatetoken(token instance);
    partial void Deletetoken(token instance);
    partial void Insertuser_follow_request(user_follow_request instance);
    partial void Updateuser_follow_request(user_follow_request instance);
    partial void Deleteuser_follow_request(user_follow_request instance);
    partial void Insertuser_follow(user_follow instance);
    partial void Updateuser_follow(user_follow instance);
    partial void Deleteuser_follow(user_follow instance);
    partial void Insertuser_in_publication(user_in_publication instance);
    partial void Updateuser_in_publication(user_in_publication instance);
    partial void Deleteuser_in_publication(user_in_publication instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertpublication(publication instance);
    partial void Updatepublication(publication instance);
    partial void Deletepublication(publication instance);
    #endregion
		
		public DCXareuDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["XareuDBConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCXareuDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCXareuDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCXareuDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCXareuDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<group> groups
		{
			get
			{
				return this.GetTable<group>();
			}
		}
		
		public System.Data.Linq.Table<vote> votes
		{
			get
			{
				return this.GetTable<vote>();
			}
		}
		
		public System.Data.Linq.Table<group_in_publication> group_in_publications
		{
			get
			{
				return this.GetTable<group_in_publication>();
			}
		}
		
		public System.Data.Linq.Table<group_join_request> group_join_requests
		{
			get
			{
				return this.GetTable<group_join_request>();
			}
		}
		
		public System.Data.Linq.Table<groups_users_subscription> groups_users_subscriptions
		{
			get
			{
				return this.GetTable<groups_users_subscription>();
			}
		}
		
		public System.Data.Linq.Table<place_tag> place_tags
		{
			get
			{
				return this.GetTable<place_tag>();
			}
		}
		
		public System.Data.Linq.Table<place_tag_in_publication> place_tag_in_publications
		{
			get
			{
				return this.GetTable<place_tag_in_publication>();
			}
		}
		
		public System.Data.Linq.Table<place_tag_users_subscription> place_tag_users_subscriptions
		{
			get
			{
				return this.GetTable<place_tag_users_subscription>();
			}
		}
		
		public System.Data.Linq.Table<tag> tags
		{
			get
			{
				return this.GetTable<tag>();
			}
		}
		
		public System.Data.Linq.Table<tag_in_publication> tag_in_publications
		{
			get
			{
				return this.GetTable<tag_in_publication>();
			}
		}
		
		public System.Data.Linq.Table<tags_users_subscription> tags_users_subscriptions
		{
			get
			{
				return this.GetTable<tags_users_subscription>();
			}
		}
		
		public System.Data.Linq.Table<token> tokens
		{
			get
			{
				return this.GetTable<token>();
			}
		}
		
		public System.Data.Linq.Table<user_follow_request> user_follow_requests
		{
			get
			{
				return this.GetTable<user_follow_request>();
			}
		}
		
		public System.Data.Linq.Table<user_follow> user_follows
		{
			get
			{
				return this.GetTable<user_follow>();
			}
		}
		
		public System.Data.Linq.Table<user_in_publication> user_in_publications
		{
			get
			{
				return this.GetTable<user_in_publication>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<publication> publications
		{
			get
			{
				return this.GetTable<publication>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[group]")]
	public partial class group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _group_id;
		
		private string _group_name;
		
		private long _user_id_owner;
		
		private System.DateTime _group_creation;
		
		private System.Nullable<bool> _group_is_private;
		
		private EntitySet<group_in_publication> _group_in_publications;
		
		private EntitySet<group_join_request> _group_join_requests;
		
		private EntitySet<groups_users_subscription> _groups_users_subscriptions;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongroup_idChanging(long value);
    partial void Ongroup_idChanged();
    partial void Ongroup_nameChanging(string value);
    partial void Ongroup_nameChanged();
    partial void Onuser_id_ownerChanging(long value);
    partial void Onuser_id_ownerChanged();
    partial void Ongroup_creationChanging(System.DateTime value);
    partial void Ongroup_creationChanged();
    partial void Ongroup_is_privateChanging(System.Nullable<bool> value);
    partial void Ongroup_is_privateChanged();
    #endregion
		
		public group()
		{
			this._group_in_publications = new EntitySet<group_in_publication>(new Action<group_in_publication>(this.attach_group_in_publications), new Action<group_in_publication>(this.detach_group_in_publications));
			this._group_join_requests = new EntitySet<group_join_request>(new Action<group_join_request>(this.attach_group_join_requests), new Action<group_join_request>(this.detach_group_join_requests));
			this._groups_users_subscriptions = new EntitySet<groups_users_subscription>(new Action<groups_users_subscription>(this.attach_groups_users_subscriptions), new Action<groups_users_subscription>(this.detach_groups_users_subscriptions));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string group_name
		{
			get
			{
				return this._group_name;
			}
			set
			{
				if ((this._group_name != value))
				{
					this.Ongroup_nameChanging(value);
					this.SendPropertyChanging();
					this._group_name = value;
					this.SendPropertyChanged("group_name");
					this.Ongroup_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id_owner", DbType="BigInt NOT NULL")]
		public long user_id_owner
		{
			get
			{
				return this._user_id_owner;
			}
			set
			{
				if ((this._user_id_owner != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_id_ownerChanging(value);
					this.SendPropertyChanging();
					this._user_id_owner = value;
					this.SendPropertyChanged("user_id_owner");
					this.Onuser_id_ownerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_creation", DbType="DateTime NOT NULL")]
		public System.DateTime group_creation
		{
			get
			{
				return this._group_creation;
			}
			set
			{
				if ((this._group_creation != value))
				{
					this.Ongroup_creationChanging(value);
					this.SendPropertyChanging();
					this._group_creation = value;
					this.SendPropertyChanged("group_creation");
					this.Ongroup_creationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_is_private", DbType="Bit")]
		public System.Nullable<bool> group_is_private
		{
			get
			{
				return this._group_is_private;
			}
			set
			{
				if ((this._group_is_private != value))
				{
					this.Ongroup_is_privateChanging(value);
					this.SendPropertyChanging();
					this._group_is_private = value;
					this.SendPropertyChanged("group_is_private");
					this.Ongroup_is_privateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="group_group_in_publication", Storage="_group_in_publications", ThisKey="group_id", OtherKey="group_id")]
		public EntitySet<group_in_publication> group_in_publications
		{
			get
			{
				return this._group_in_publications;
			}
			set
			{
				this._group_in_publications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="group_group_join_request", Storage="_group_join_requests", ThisKey="group_id", OtherKey="group_id")]
		public EntitySet<group_join_request> group_join_requests
		{
			get
			{
				return this._group_join_requests;
			}
			set
			{
				this._group_join_requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="group_groups_users_subscription", Storage="_groups_users_subscriptions", ThisKey="group_id", OtherKey="group_id")]
		public EntitySet<groups_users_subscription> groups_users_subscriptions
		{
			get
			{
				return this._groups_users_subscriptions;
			}
			set
			{
				this._groups_users_subscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_group", Storage="_user", ThisKey="user_id_owner", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.groups.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.groups.Add(this);
						this._user_id_owner = value.user_id;
					}
					else
					{
						this._user_id_owner = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_group_in_publications(group_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.group = this;
		}
		
		private void detach_group_in_publications(group_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.group = null;
		}
		
		private void attach_group_join_requests(group_join_request entity)
		{
			this.SendPropertyChanging();
			entity.group = this;
		}
		
		private void detach_group_join_requests(group_join_request entity)
		{
			this.SendPropertyChanging();
			entity.group = null;
		}
		
		private void attach_groups_users_subscriptions(groups_users_subscription entity)
		{
			this.SendPropertyChanging();
			entity.group = this;
		}
		
		private void detach_groups_users_subscriptions(groups_users_subscription entity)
		{
			this.SendPropertyChanging();
			entity.group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vote")]
	public partial class vote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _vote_id;
		
		private long _vote_author;
		
		private long _vote_publication;
		
		private bool _vote_positive;
		
		private double _vote_karma;
		
		private EntityRef<user> _user;
		
		private EntityRef<publication> _publication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvote_idChanging(long value);
    partial void Onvote_idChanged();
    partial void Onvote_authorChanging(long value);
    partial void Onvote_authorChanged();
    partial void Onvote_publicationChanging(long value);
    partial void Onvote_publicationChanged();
    partial void Onvote_positiveChanging(bool value);
    partial void Onvote_positiveChanged();
    partial void Onvote_karmaChanging(double value);
    partial void Onvote_karmaChanged();
    #endregion
		
		public vote()
		{
			this._user = default(EntityRef<user>);
			this._publication = default(EntityRef<publication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vote_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long vote_id
		{
			get
			{
				return this._vote_id;
			}
			set
			{
				if ((this._vote_id != value))
				{
					this.Onvote_idChanging(value);
					this.SendPropertyChanging();
					this._vote_id = value;
					this.SendPropertyChanged("vote_id");
					this.Onvote_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vote_author", DbType="BigInt NOT NULL")]
		public long vote_author
		{
			get
			{
				return this._vote_author;
			}
			set
			{
				if ((this._vote_author != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvote_authorChanging(value);
					this.SendPropertyChanging();
					this._vote_author = value;
					this.SendPropertyChanged("vote_author");
					this.Onvote_authorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vote_publication", DbType="BigInt NOT NULL")]
		public long vote_publication
		{
			get
			{
				return this._vote_publication;
			}
			set
			{
				if ((this._vote_publication != value))
				{
					if (this._publication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvote_publicationChanging(value);
					this.SendPropertyChanging();
					this._vote_publication = value;
					this.SendPropertyChanged("vote_publication");
					this.Onvote_publicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vote_positive", DbType="Bit NOT NULL")]
		public bool vote_positive
		{
			get
			{
				return this._vote_positive;
			}
			set
			{
				if ((this._vote_positive != value))
				{
					this.Onvote_positiveChanging(value);
					this.SendPropertyChanging();
					this._vote_positive = value;
					this.SendPropertyChanged("vote_positive");
					this.Onvote_positiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vote_karma", DbType="Float NOT NULL")]
		public double vote_karma
		{
			get
			{
				return this._vote_karma;
			}
			set
			{
				if ((this._vote_karma != value))
				{
					this.Onvote_karmaChanging(value);
					this.SendPropertyChanging();
					this._vote_karma = value;
					this.SendPropertyChanged("vote_karma");
					this.Onvote_karmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_vote", Storage="_user", ThisKey="vote_author", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.votes.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.votes.Add(this);
						this._vote_author = value.user_id;
					}
					else
					{
						this._vote_author = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publication_vote", Storage="_publication", ThisKey="vote_publication", OtherKey="publication_id", IsForeignKey=true)]
		public publication publication
		{
			get
			{
				return this._publication.Entity;
			}
			set
			{
				publication previousValue = this._publication.Entity;
				if (((previousValue != value) 
							|| (this._publication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._publication.Entity = null;
						previousValue.votes.Remove(this);
					}
					this._publication.Entity = value;
					if ((value != null))
					{
						value.votes.Add(this);
						this._vote_publication = value.publication_id;
					}
					else
					{
						this._vote_publication = default(long);
					}
					this.SendPropertyChanged("publication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.group_in_publication")]
	public partial class group_in_publication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _group_id;
		
		private long _publication_id;
		
		private EntityRef<group> _group;
		
		private EntityRef<publication> _publication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongroup_idChanging(long value);
    partial void Ongroup_idChanged();
    partial void Onpublication_idChanging(long value);
    partial void Onpublication_idChanged();
    #endregion
		
		public group_in_publication()
		{
			this._group = default(EntityRef<group>);
			this._publication = default(EntityRef<publication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					if (this._group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publication_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long publication_id
		{
			get
			{
				return this._publication_id;
			}
			set
			{
				if ((this._publication_id != value))
				{
					if (this._publication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpublication_idChanging(value);
					this.SendPropertyChanging();
					this._publication_id = value;
					this.SendPropertyChanged("publication_id");
					this.Onpublication_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="group_group_in_publication", Storage="_group", ThisKey="group_id", OtherKey="group_id", IsForeignKey=true)]
		public group group
		{
			get
			{
				return this._group.Entity;
			}
			set
			{
				group previousValue = this._group.Entity;
				if (((previousValue != value) 
							|| (this._group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._group.Entity = null;
						previousValue.group_in_publications.Remove(this);
					}
					this._group.Entity = value;
					if ((value != null))
					{
						value.group_in_publications.Add(this);
						this._group_id = value.group_id;
					}
					else
					{
						this._group_id = default(long);
					}
					this.SendPropertyChanged("group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publication_group_in_publication", Storage="_publication", ThisKey="publication_id", OtherKey="publication_id", IsForeignKey=true)]
		public publication publication
		{
			get
			{
				return this._publication.Entity;
			}
			set
			{
				publication previousValue = this._publication.Entity;
				if (((previousValue != value) 
							|| (this._publication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._publication.Entity = null;
						previousValue.group_in_publications.Remove(this);
					}
					this._publication.Entity = value;
					if ((value != null))
					{
						value.group_in_publications.Add(this);
						this._publication_id = value.publication_id;
					}
					else
					{
						this._publication_id = default(long);
					}
					this.SendPropertyChanged("publication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.group_join_request")]
	public partial class group_join_request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _group_id;
		
		private long _user_id_request;
		
		private System.DateTime _datetime;
		
		private EntityRef<group> _group;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongroup_idChanging(long value);
    partial void Ongroup_idChanged();
    partial void Onuser_id_requestChanging(long value);
    partial void Onuser_id_requestChanged();
    partial void OndatetimeChanging(System.DateTime value);
    partial void OndatetimeChanged();
    #endregion
		
		public group_join_request()
		{
			this._group = default(EntityRef<group>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					if (this._group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id_request", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long user_id_request
		{
			get
			{
				return this._user_id_request;
			}
			set
			{
				if ((this._user_id_request != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_id_requestChanging(value);
					this.SendPropertyChanging();
					this._user_id_request = value;
					this.SendPropertyChanged("user_id_request");
					this.Onuser_id_requestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime datetime
		{
			get
			{
				return this._datetime;
			}
			set
			{
				if ((this._datetime != value))
				{
					this.OndatetimeChanging(value);
					this.SendPropertyChanging();
					this._datetime = value;
					this.SendPropertyChanged("datetime");
					this.OndatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="group_group_join_request", Storage="_group", ThisKey="group_id", OtherKey="group_id", IsForeignKey=true)]
		public group group
		{
			get
			{
				return this._group.Entity;
			}
			set
			{
				group previousValue = this._group.Entity;
				if (((previousValue != value) 
							|| (this._group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._group.Entity = null;
						previousValue.group_join_requests.Remove(this);
					}
					this._group.Entity = value;
					if ((value != null))
					{
						value.group_join_requests.Add(this);
						this._group_id = value.group_id;
					}
					else
					{
						this._group_id = default(long);
					}
					this.SendPropertyChanged("group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_group_join_request", Storage="_user", ThisKey="user_id_request", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.group_join_requests.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.group_join_requests.Add(this);
						this._user_id_request = value.user_id;
					}
					else
					{
						this._user_id_request = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.groups_users_subscriptions")]
	public partial class groups_users_subscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _group_id;
		
		private long _user_id;
		
		private EntityRef<group> _group;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongroup_idChanging(long value);
    partial void Ongroup_idChanged();
    partial void Onuser_idChanging(long value);
    partial void Onuser_idChanged();
    #endregion
		
		public groups_users_subscription()
		{
			this._group = default(EntityRef<group>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					if (this._group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="group_groups_users_subscription", Storage="_group", ThisKey="group_id", OtherKey="group_id", IsForeignKey=true)]
		public group group
		{
			get
			{
				return this._group.Entity;
			}
			set
			{
				group previousValue = this._group.Entity;
				if (((previousValue != value) 
							|| (this._group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._group.Entity = null;
						previousValue.groups_users_subscriptions.Remove(this);
					}
					this._group.Entity = value;
					if ((value != null))
					{
						value.groups_users_subscriptions.Add(this);
						this._group_id = value.group_id;
					}
					else
					{
						this._group_id = default(long);
					}
					this.SendPropertyChanged("group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_groups_users_subscription", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.groups_users_subscriptions.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.groups_users_subscriptions.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.place_tag")]
	public partial class place_tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _place_tag_id;
		
		private string _place_tag_name;
		
		private System.Nullable<long> _place_tag_parent;
		
		private EntitySet<place_tag_in_publication> _place_tag_in_publications;
		
		private EntitySet<place_tag_in_publication> _place_tag_in_publications1;
		
		private EntitySet<place_tag_users_subscription> _place_tag_users_subscriptions;
		
		private EntitySet<user> _users;
		
		private EntitySet<publication> _publications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onplace_tag_idChanging(long value);
    partial void Onplace_tag_idChanged();
    partial void Onplace_tag_nameChanging(string value);
    partial void Onplace_tag_nameChanged();
    partial void Onplace_tag_parentChanging(System.Nullable<long> value);
    partial void Onplace_tag_parentChanged();
    #endregion
		
		public place_tag()
		{
			this._place_tag_in_publications = new EntitySet<place_tag_in_publication>(new Action<place_tag_in_publication>(this.attach_place_tag_in_publications), new Action<place_tag_in_publication>(this.detach_place_tag_in_publications));
			this._place_tag_in_publications1 = new EntitySet<place_tag_in_publication>(new Action<place_tag_in_publication>(this.attach_place_tag_in_publications1), new Action<place_tag_in_publication>(this.detach_place_tag_in_publications1));
			this._place_tag_users_subscriptions = new EntitySet<place_tag_users_subscription>(new Action<place_tag_users_subscription>(this.attach_place_tag_users_subscriptions), new Action<place_tag_users_subscription>(this.detach_place_tag_users_subscriptions));
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			this._publications = new EntitySet<publication>(new Action<publication>(this.attach_publications), new Action<publication>(this.detach_publications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_tag_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long place_tag_id
		{
			get
			{
				return this._place_tag_id;
			}
			set
			{
				if ((this._place_tag_id != value))
				{
					this.Onplace_tag_idChanging(value);
					this.SendPropertyChanging();
					this._place_tag_id = value;
					this.SendPropertyChanged("place_tag_id");
					this.Onplace_tag_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_tag_name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string place_tag_name
		{
			get
			{
				return this._place_tag_name;
			}
			set
			{
				if ((this._place_tag_name != value))
				{
					this.Onplace_tag_nameChanging(value);
					this.SendPropertyChanging();
					this._place_tag_name = value;
					this.SendPropertyChanged("place_tag_name");
					this.Onplace_tag_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_tag_parent", DbType="BigInt")]
		public System.Nullable<long> place_tag_parent
		{
			get
			{
				return this._place_tag_parent;
			}
			set
			{
				if ((this._place_tag_parent != value))
				{
					this.Onplace_tag_parentChanging(value);
					this.SendPropertyChanging();
					this._place_tag_parent = value;
					this.SendPropertyChanged("place_tag_parent");
					this.Onplace_tag_parentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_tag_place_tag_in_publication", Storage="_place_tag_in_publications", ThisKey="place_tag_id", OtherKey="place_tag_id")]
		public EntitySet<place_tag_in_publication> place_tag_in_publications
		{
			get
			{
				return this._place_tag_in_publications;
			}
			set
			{
				this._place_tag_in_publications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_tag_place_tag_in_publication1", Storage="_place_tag_in_publications1", ThisKey="place_tag_id", OtherKey="place_tag_id")]
		public EntitySet<place_tag_in_publication> place_tag_in_publications1
		{
			get
			{
				return this._place_tag_in_publications1;
			}
			set
			{
				this._place_tag_in_publications1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_tag_place_tag_users_subscription", Storage="_place_tag_users_subscriptions", ThisKey="place_tag_id", OtherKey="place_tag_id")]
		public EntitySet<place_tag_users_subscription> place_tag_users_subscriptions
		{
			get
			{
				return this._place_tag_users_subscriptions;
			}
			set
			{
				this._place_tag_users_subscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_tag_user", Storage="_users", ThisKey="place_tag_id", OtherKey="user_default_place")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_tag_publication", Storage="_publications", ThisKey="place_tag_id", OtherKey="place_tag_id")]
		public EntitySet<publication> publications
		{
			get
			{
				return this._publications;
			}
			set
			{
				this._publications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_place_tag_in_publications(place_tag_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.place_tag = this;
		}
		
		private void detach_place_tag_in_publications(place_tag_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.place_tag = null;
		}
		
		private void attach_place_tag_in_publications1(place_tag_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.place_tag1 = this;
		}
		
		private void detach_place_tag_in_publications1(place_tag_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.place_tag1 = null;
		}
		
		private void attach_place_tag_users_subscriptions(place_tag_users_subscription entity)
		{
			this.SendPropertyChanging();
			entity.place_tag = this;
		}
		
		private void detach_place_tag_users_subscriptions(place_tag_users_subscription entity)
		{
			this.SendPropertyChanging();
			entity.place_tag = null;
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.place_tag = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.place_tag = null;
		}
		
		private void attach_publications(publication entity)
		{
			this.SendPropertyChanging();
			entity.place_tag = this;
		}
		
		private void detach_publications(publication entity)
		{
			this.SendPropertyChanging();
			entity.place_tag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.place_tag_in_publication")]
	public partial class place_tag_in_publication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _place_tag_id;
		
		private long _publication_id;
		
		private EntityRef<place_tag> _place_tag;
		
		private EntityRef<place_tag> _place_tag1;
		
		private EntityRef<publication> _publication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onplace_tag_idChanging(long value);
    partial void Onplace_tag_idChanged();
    partial void Onpublication_idChanging(long value);
    partial void Onpublication_idChanged();
    #endregion
		
		public place_tag_in_publication()
		{
			this._place_tag = default(EntityRef<place_tag>);
			this._place_tag1 = default(EntityRef<place_tag>);
			this._publication = default(EntityRef<publication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_tag_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long place_tag_id
		{
			get
			{
				return this._place_tag_id;
			}
			set
			{
				if ((this._place_tag_id != value))
				{
					if ((this._place_tag.HasLoadedOrAssignedValue || this._place_tag1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplace_tag_idChanging(value);
					this.SendPropertyChanging();
					this._place_tag_id = value;
					this.SendPropertyChanged("place_tag_id");
					this.Onplace_tag_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publication_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long publication_id
		{
			get
			{
				return this._publication_id;
			}
			set
			{
				if ((this._publication_id != value))
				{
					if (this._publication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpublication_idChanging(value);
					this.SendPropertyChanging();
					this._publication_id = value;
					this.SendPropertyChanged("publication_id");
					this.Onpublication_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_tag_place_tag_in_publication", Storage="_place_tag", ThisKey="place_tag_id", OtherKey="place_tag_id", IsForeignKey=true)]
		public place_tag place_tag
		{
			get
			{
				return this._place_tag.Entity;
			}
			set
			{
				place_tag previousValue = this._place_tag.Entity;
				if (((previousValue != value) 
							|| (this._place_tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._place_tag.Entity = null;
						previousValue.place_tag_in_publications.Remove(this);
					}
					this._place_tag.Entity = value;
					if ((value != null))
					{
						value.place_tag_in_publications.Add(this);
						this._place_tag_id = value.place_tag_id;
					}
					else
					{
						this._place_tag_id = default(long);
					}
					this.SendPropertyChanged("place_tag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_tag_place_tag_in_publication1", Storage="_place_tag1", ThisKey="place_tag_id", OtherKey="place_tag_id", IsForeignKey=true)]
		public place_tag place_tag1
		{
			get
			{
				return this._place_tag1.Entity;
			}
			set
			{
				place_tag previousValue = this._place_tag1.Entity;
				if (((previousValue != value) 
							|| (this._place_tag1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._place_tag1.Entity = null;
						previousValue.place_tag_in_publications1.Remove(this);
					}
					this._place_tag1.Entity = value;
					if ((value != null))
					{
						value.place_tag_in_publications1.Add(this);
						this._place_tag_id = value.place_tag_id;
					}
					else
					{
						this._place_tag_id = default(long);
					}
					this.SendPropertyChanged("place_tag1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publication_place_tag_in_publication", Storage="_publication", ThisKey="publication_id", OtherKey="publication_id", IsForeignKey=true)]
		public publication publication
		{
			get
			{
				return this._publication.Entity;
			}
			set
			{
				publication previousValue = this._publication.Entity;
				if (((previousValue != value) 
							|| (this._publication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._publication.Entity = null;
						previousValue.place_tag_in_publications.Remove(this);
					}
					this._publication.Entity = value;
					if ((value != null))
					{
						value.place_tag_in_publications.Add(this);
						this._publication_id = value.publication_id;
					}
					else
					{
						this._publication_id = default(long);
					}
					this.SendPropertyChanged("publication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.place_tag_users_subscription")]
	public partial class place_tag_users_subscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _user_id;
		
		private long _place_tag_id;
		
		private EntityRef<place_tag> _place_tag;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(long value);
    partial void Onuser_idChanged();
    partial void Onplace_tag_idChanging(long value);
    partial void Onplace_tag_idChanged();
    #endregion
		
		public place_tag_users_subscription()
		{
			this._place_tag = default(EntityRef<place_tag>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_tag_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long place_tag_id
		{
			get
			{
				return this._place_tag_id;
			}
			set
			{
				if ((this._place_tag_id != value))
				{
					if (this._place_tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplace_tag_idChanging(value);
					this.SendPropertyChanging();
					this._place_tag_id = value;
					this.SendPropertyChanged("place_tag_id");
					this.Onplace_tag_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_tag_place_tag_users_subscription", Storage="_place_tag", ThisKey="place_tag_id", OtherKey="place_tag_id", IsForeignKey=true)]
		public place_tag place_tag
		{
			get
			{
				return this._place_tag.Entity;
			}
			set
			{
				place_tag previousValue = this._place_tag.Entity;
				if (((previousValue != value) 
							|| (this._place_tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._place_tag.Entity = null;
						previousValue.place_tag_users_subscriptions.Remove(this);
					}
					this._place_tag.Entity = value;
					if ((value != null))
					{
						value.place_tag_users_subscriptions.Add(this);
						this._place_tag_id = value.place_tag_id;
					}
					else
					{
						this._place_tag_id = default(long);
					}
					this.SendPropertyChanged("place_tag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_place_tag_users_subscription", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.place_tag_users_subscriptions.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.place_tag_users_subscriptions.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tag")]
	public partial class tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _tag_id;
		
		private string _tag_name;
		
		private EntitySet<tag_in_publication> _tag_in_publications;
		
		private EntitySet<tags_users_subscription> _tags_users_subscriptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontag_idChanging(long value);
    partial void Ontag_idChanged();
    partial void Ontag_nameChanging(string value);
    partial void Ontag_nameChanged();
    #endregion
		
		public tag()
		{
			this._tag_in_publications = new EntitySet<tag_in_publication>(new Action<tag_in_publication>(this.attach_tag_in_publications), new Action<tag_in_publication>(this.detach_tag_in_publications));
			this._tags_users_subscriptions = new EntitySet<tags_users_subscription>(new Action<tags_users_subscription>(this.attach_tags_users_subscriptions), new Action<tags_users_subscription>(this.detach_tags_users_subscriptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long tag_id
		{
			get
			{
				return this._tag_id;
			}
			set
			{
				if ((this._tag_id != value))
				{
					this.Ontag_idChanging(value);
					this.SendPropertyChanging();
					this._tag_id = value;
					this.SendPropertyChanged("tag_id");
					this.Ontag_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tag_name
		{
			get
			{
				return this._tag_name;
			}
			set
			{
				if ((this._tag_name != value))
				{
					this.Ontag_nameChanging(value);
					this.SendPropertyChanging();
					this._tag_name = value;
					this.SendPropertyChanged("tag_name");
					this.Ontag_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tag_tag_in_publication", Storage="_tag_in_publications", ThisKey="tag_id", OtherKey="tag_id")]
		public EntitySet<tag_in_publication> tag_in_publications
		{
			get
			{
				return this._tag_in_publications;
			}
			set
			{
				this._tag_in_publications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tag_tags_users_subscription", Storage="_tags_users_subscriptions", ThisKey="tag_id", OtherKey="tag_id")]
		public EntitySet<tags_users_subscription> tags_users_subscriptions
		{
			get
			{
				return this._tags_users_subscriptions;
			}
			set
			{
				this._tags_users_subscriptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tag_in_publications(tag_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.tag = this;
		}
		
		private void detach_tag_in_publications(tag_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.tag = null;
		}
		
		private void attach_tags_users_subscriptions(tags_users_subscription entity)
		{
			this.SendPropertyChanging();
			entity.tag = this;
		}
		
		private void detach_tags_users_subscriptions(tags_users_subscription entity)
		{
			this.SendPropertyChanging();
			entity.tag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tag_in_publication")]
	public partial class tag_in_publication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _tag_id;
		
		private long _publication_id;
		
		private EntityRef<tag> _tag;
		
		private EntityRef<publication> _publication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontag_idChanging(long value);
    partial void Ontag_idChanged();
    partial void Onpublication_idChanging(long value);
    partial void Onpublication_idChanged();
    #endregion
		
		public tag_in_publication()
		{
			this._tag = default(EntityRef<tag>);
			this._publication = default(EntityRef<publication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long tag_id
		{
			get
			{
				return this._tag_id;
			}
			set
			{
				if ((this._tag_id != value))
				{
					if (this._tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontag_idChanging(value);
					this.SendPropertyChanging();
					this._tag_id = value;
					this.SendPropertyChanged("tag_id");
					this.Ontag_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publication_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long publication_id
		{
			get
			{
				return this._publication_id;
			}
			set
			{
				if ((this._publication_id != value))
				{
					if (this._publication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpublication_idChanging(value);
					this.SendPropertyChanging();
					this._publication_id = value;
					this.SendPropertyChanged("publication_id");
					this.Onpublication_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tag_tag_in_publication", Storage="_tag", ThisKey="tag_id", OtherKey="tag_id", IsForeignKey=true)]
		public tag tag
		{
			get
			{
				return this._tag.Entity;
			}
			set
			{
				tag previousValue = this._tag.Entity;
				if (((previousValue != value) 
							|| (this._tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tag.Entity = null;
						previousValue.tag_in_publications.Remove(this);
					}
					this._tag.Entity = value;
					if ((value != null))
					{
						value.tag_in_publications.Add(this);
						this._tag_id = value.tag_id;
					}
					else
					{
						this._tag_id = default(long);
					}
					this.SendPropertyChanged("tag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publication_tag_in_publication", Storage="_publication", ThisKey="publication_id", OtherKey="publication_id", IsForeignKey=true)]
		public publication publication
		{
			get
			{
				return this._publication.Entity;
			}
			set
			{
				publication previousValue = this._publication.Entity;
				if (((previousValue != value) 
							|| (this._publication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._publication.Entity = null;
						previousValue.tag_in_publications.Remove(this);
					}
					this._publication.Entity = value;
					if ((value != null))
					{
						value.tag_in_publications.Add(this);
						this._publication_id = value.publication_id;
					}
					else
					{
						this._publication_id = default(long);
					}
					this.SendPropertyChanged("publication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tags_users_subscriptions")]
	public partial class tags_users_subscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _tag_id;
		
		private long _user_id;
		
		private EntityRef<tag> _tag;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontag_idChanging(long value);
    partial void Ontag_idChanged();
    partial void Onuser_idChanging(long value);
    partial void Onuser_idChanged();
    #endregion
		
		public tags_users_subscription()
		{
			this._tag = default(EntityRef<tag>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long tag_id
		{
			get
			{
				return this._tag_id;
			}
			set
			{
				if ((this._tag_id != value))
				{
					if (this._tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontag_idChanging(value);
					this.SendPropertyChanging();
					this._tag_id = value;
					this.SendPropertyChanged("tag_id");
					this.Ontag_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tag_tags_users_subscription", Storage="_tag", ThisKey="tag_id", OtherKey="tag_id", IsForeignKey=true)]
		public tag tag
		{
			get
			{
				return this._tag.Entity;
			}
			set
			{
				tag previousValue = this._tag.Entity;
				if (((previousValue != value) 
							|| (this._tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tag.Entity = null;
						previousValue.tags_users_subscriptions.Remove(this);
					}
					this._tag.Entity = value;
					if ((value != null))
					{
						value.tags_users_subscriptions.Add(this);
						this._tag_id = value.tag_id;
					}
					else
					{
						this._tag_id = default(long);
					}
					this.SendPropertyChanged("tag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_tags_users_subscription", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.tags_users_subscriptions.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.tags_users_subscriptions.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.token")]
	public partial class token : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _token_id;
		
		private System.Guid _token1;
		
		private bool _token_was_used;
		
		private long _user_id;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontoken_idChanging(long value);
    partial void Ontoken_idChanged();
    partial void Ontoken1Changing(System.Guid value);
    partial void Ontoken1Changed();
    partial void Ontoken_was_usedChanging(bool value);
    partial void Ontoken_was_usedChanged();
    partial void Onuser_idChanging(long value);
    partial void Onuser_idChanged();
    #endregion
		
		public token()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long token_id
		{
			get
			{
				return this._token_id;
			}
			set
			{
				if ((this._token_id != value))
				{
					this.Ontoken_idChanging(value);
					this.SendPropertyChanging();
					this._token_id = value;
					this.SendPropertyChanged("token_id");
					this.Ontoken_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="token", Storage="_token1", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid token1
		{
			get
			{
				return this._token1;
			}
			set
			{
				if ((this._token1 != value))
				{
					this.Ontoken1Changing(value);
					this.SendPropertyChanging();
					this._token1 = value;
					this.SendPropertyChanged("token1");
					this.Ontoken1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token_was_used", DbType="Bit NOT NULL")]
		public bool token_was_used
		{
			get
			{
				return this._token_was_used;
			}
			set
			{
				if ((this._token_was_used != value))
				{
					this.Ontoken_was_usedChanging(value);
					this.SendPropertyChanging();
					this._token_was_used = value;
					this.SendPropertyChanged("token_was_used");
					this.Ontoken_was_usedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt NOT NULL")]
		public long user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_token", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.tokens.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.tokens.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_follow_request")]
	public partial class user_follow_request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _user_id_request;
		
		private long _user_id_requested;
		
		private System.DateTime _datetime;
		
		private EntityRef<user> _user;
		
		private EntityRef<user> _user1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_id_requestChanging(long value);
    partial void Onuser_id_requestChanged();
    partial void Onuser_id_requestedChanging(long value);
    partial void Onuser_id_requestedChanged();
    partial void OndatetimeChanging(System.DateTime value);
    partial void OndatetimeChanged();
    #endregion
		
		public user_follow_request()
		{
			this._user = default(EntityRef<user>);
			this._user1 = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id_request", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long user_id_request
		{
			get
			{
				return this._user_id_request;
			}
			set
			{
				if ((this._user_id_request != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_id_requestChanging(value);
					this.SendPropertyChanging();
					this._user_id_request = value;
					this.SendPropertyChanged("user_id_request");
					this.Onuser_id_requestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id_requested", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long user_id_requested
		{
			get
			{
				return this._user_id_requested;
			}
			set
			{
				if ((this._user_id_requested != value))
				{
					if (this._user1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_id_requestedChanging(value);
					this.SendPropertyChanging();
					this._user_id_requested = value;
					this.SendPropertyChanged("user_id_requested");
					this.Onuser_id_requestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime datetime
		{
			get
			{
				return this._datetime;
			}
			set
			{
				if ((this._datetime != value))
				{
					this.OndatetimeChanging(value);
					this.SendPropertyChanging();
					this._datetime = value;
					this.SendPropertyChanged("datetime");
					this.OndatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_follow_request", Storage="_user", ThisKey="user_id_request", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.user_follow_requests.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.user_follow_requests.Add(this);
						this._user_id_request = value.user_id;
					}
					else
					{
						this._user_id_request = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_follow_request1", Storage="_user1", ThisKey="user_id_requested", OtherKey="user_id", IsForeignKey=true)]
		public user user1
		{
			get
			{
				return this._user1.Entity;
			}
			set
			{
				user previousValue = this._user1.Entity;
				if (((previousValue != value) 
							|| (this._user1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user1.Entity = null;
						previousValue.user_follow_requests1.Remove(this);
					}
					this._user1.Entity = value;
					if ((value != null))
					{
						value.user_follow_requests1.Add(this);
						this._user_id_requested = value.user_id;
					}
					else
					{
						this._user_id_requested = default(long);
					}
					this.SendPropertyChanged("user1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_follows")]
	public partial class user_follow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _user_id_follower;
		
		private long _user_id_followed;
		
		private EntityRef<user> _user;
		
		private EntityRef<user> _user1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_id_followerChanging(long value);
    partial void Onuser_id_followerChanged();
    partial void Onuser_id_followedChanging(long value);
    partial void Onuser_id_followedChanged();
    #endregion
		
		public user_follow()
		{
			this._user = default(EntityRef<user>);
			this._user1 = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id_follower", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long user_id_follower
		{
			get
			{
				return this._user_id_follower;
			}
			set
			{
				if ((this._user_id_follower != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_id_followerChanging(value);
					this.SendPropertyChanging();
					this._user_id_follower = value;
					this.SendPropertyChanged("user_id_follower");
					this.Onuser_id_followerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id_followed", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long user_id_followed
		{
			get
			{
				return this._user_id_followed;
			}
			set
			{
				if ((this._user_id_followed != value))
				{
					if (this._user1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_id_followedChanging(value);
					this.SendPropertyChanging();
					this._user_id_followed = value;
					this.SendPropertyChanged("user_id_followed");
					this.Onuser_id_followedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_follow", Storage="_user", ThisKey="user_id_follower", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.user_follows.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.user_follows.Add(this);
						this._user_id_follower = value.user_id;
					}
					else
					{
						this._user_id_follower = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_follow1", Storage="_user1", ThisKey="user_id_followed", OtherKey="user_id", IsForeignKey=true)]
		public user user1
		{
			get
			{
				return this._user1.Entity;
			}
			set
			{
				user previousValue = this._user1.Entity;
				if (((previousValue != value) 
							|| (this._user1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user1.Entity = null;
						previousValue.user_follows1.Remove(this);
					}
					this._user1.Entity = value;
					if ((value != null))
					{
						value.user_follows1.Add(this);
						this._user_id_followed = value.user_id;
					}
					else
					{
						this._user_id_followed = default(long);
					}
					this.SendPropertyChanged("user1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_in_publication")]
	public partial class user_in_publication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _user_id;
		
		private long _publication_id;
		
		private EntityRef<user> _user;
		
		private EntityRef<publication> _publication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(long value);
    partial void Onuser_idChanged();
    partial void Onpublication_idChanging(long value);
    partial void Onpublication_idChanged();
    #endregion
		
		public user_in_publication()
		{
			this._user = default(EntityRef<user>);
			this._publication = default(EntityRef<publication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publication_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long publication_id
		{
			get
			{
				return this._publication_id;
			}
			set
			{
				if ((this._publication_id != value))
				{
					if (this._publication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpublication_idChanging(value);
					this.SendPropertyChanging();
					this._publication_id = value;
					this.SendPropertyChanged("publication_id");
					this.Onpublication_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_in_publication", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.user_in_publications.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.user_in_publications.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publication_user_in_publication", Storage="_publication", ThisKey="publication_id", OtherKey="publication_id", IsForeignKey=true)]
		public publication publication
		{
			get
			{
				return this._publication.Entity;
			}
			set
			{
				publication previousValue = this._publication.Entity;
				if (((previousValue != value) 
							|| (this._publication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._publication.Entity = null;
						previousValue.user_in_publications.Remove(this);
					}
					this._publication.Entity = value;
					if ((value != null))
					{
						value.user_in_publications.Add(this);
						this._publication_id = value.publication_id;
					}
					else
					{
						this._publication_id = default(long);
					}
					this.SendPropertyChanged("publication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _user_id;
		
		private string _user_nick;
		
		private string _user_email;
		
		private long _user_default_place;
		
		private string _user_password;
		
		private bool _user_is_admin;
		
		private System.DateTime _user_signup;
		
		private bool _user_is_private;
		
		private float _user_karma;
		
		private string _user_picture;
		
		private EntitySet<group> _groups;
		
		private EntitySet<vote> _votes;
		
		private EntitySet<group_join_request> _group_join_requests;
		
		private EntitySet<groups_users_subscription> _groups_users_subscriptions;
		
		private EntitySet<place_tag_users_subscription> _place_tag_users_subscriptions;
		
		private EntitySet<tags_users_subscription> _tags_users_subscriptions;
		
		private EntitySet<token> _tokens;
		
		private EntitySet<user_follow_request> _user_follow_requests;
		
		private EntitySet<user_follow_request> _user_follow_requests1;
		
		private EntitySet<user_follow> _user_follows;
		
		private EntitySet<user_follow> _user_follows1;
		
		private EntitySet<user_in_publication> _user_in_publications;
		
		private EntitySet<publication> _publications;
		
		private EntityRef<place_tag> _place_tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(long value);
    partial void Onuser_idChanged();
    partial void Onuser_nickChanging(string value);
    partial void Onuser_nickChanged();
    partial void Onuser_emailChanging(string value);
    partial void Onuser_emailChanged();
    partial void Onuser_default_placeChanging(long value);
    partial void Onuser_default_placeChanged();
    partial void Onuser_passwordChanging(string value);
    partial void Onuser_passwordChanged();
    partial void Onuser_is_adminChanging(bool value);
    partial void Onuser_is_adminChanged();
    partial void Onuser_signupChanging(System.DateTime value);
    partial void Onuser_signupChanged();
    partial void Onuser_is_privateChanging(bool value);
    partial void Onuser_is_privateChanged();
    partial void Onuser_karmaChanging(float value);
    partial void Onuser_karmaChanged();
    partial void Onuser_pictureChanging(string value);
    partial void Onuser_pictureChanged();
    #endregion
		
		public user()
		{
			this._groups = new EntitySet<group>(new Action<group>(this.attach_groups), new Action<group>(this.detach_groups));
			this._votes = new EntitySet<vote>(new Action<vote>(this.attach_votes), new Action<vote>(this.detach_votes));
			this._group_join_requests = new EntitySet<group_join_request>(new Action<group_join_request>(this.attach_group_join_requests), new Action<group_join_request>(this.detach_group_join_requests));
			this._groups_users_subscriptions = new EntitySet<groups_users_subscription>(new Action<groups_users_subscription>(this.attach_groups_users_subscriptions), new Action<groups_users_subscription>(this.detach_groups_users_subscriptions));
			this._place_tag_users_subscriptions = new EntitySet<place_tag_users_subscription>(new Action<place_tag_users_subscription>(this.attach_place_tag_users_subscriptions), new Action<place_tag_users_subscription>(this.detach_place_tag_users_subscriptions));
			this._tags_users_subscriptions = new EntitySet<tags_users_subscription>(new Action<tags_users_subscription>(this.attach_tags_users_subscriptions), new Action<tags_users_subscription>(this.detach_tags_users_subscriptions));
			this._tokens = new EntitySet<token>(new Action<token>(this.attach_tokens), new Action<token>(this.detach_tokens));
			this._user_follow_requests = new EntitySet<user_follow_request>(new Action<user_follow_request>(this.attach_user_follow_requests), new Action<user_follow_request>(this.detach_user_follow_requests));
			this._user_follow_requests1 = new EntitySet<user_follow_request>(new Action<user_follow_request>(this.attach_user_follow_requests1), new Action<user_follow_request>(this.detach_user_follow_requests1));
			this._user_follows = new EntitySet<user_follow>(new Action<user_follow>(this.attach_user_follows), new Action<user_follow>(this.detach_user_follows));
			this._user_follows1 = new EntitySet<user_follow>(new Action<user_follow>(this.attach_user_follows1), new Action<user_follow>(this.detach_user_follows1));
			this._user_in_publications = new EntitySet<user_in_publication>(new Action<user_in_publication>(this.attach_user_in_publications), new Action<user_in_publication>(this.detach_user_in_publications));
			this._publications = new EntitySet<publication>(new Action<publication>(this.attach_publications), new Action<publication>(this.detach_publications));
			this._place_tag = default(EntityRef<place_tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_nick", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string user_nick
		{
			get
			{
				return this._user_nick;
			}
			set
			{
				if ((this._user_nick != value))
				{
					this.Onuser_nickChanging(value);
					this.SendPropertyChanging();
					this._user_nick = value;
					this.SendPropertyChanged("user_nick");
					this.Onuser_nickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string user_email
		{
			get
			{
				return this._user_email;
			}
			set
			{
				if ((this._user_email != value))
				{
					this.Onuser_emailChanging(value);
					this.SendPropertyChanging();
					this._user_email = value;
					this.SendPropertyChanged("user_email");
					this.Onuser_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_default_place", DbType="BigInt NOT NULL")]
		public long user_default_place
		{
			get
			{
				return this._user_default_place;
			}
			set
			{
				if ((this._user_default_place != value))
				{
					if (this._place_tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_default_placeChanging(value);
					this.SendPropertyChanging();
					this._user_default_place = value;
					this.SendPropertyChanged("user_default_place");
					this.Onuser_default_placeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string user_password
		{
			get
			{
				return this._user_password;
			}
			set
			{
				if ((this._user_password != value))
				{
					this.Onuser_passwordChanging(value);
					this.SendPropertyChanging();
					this._user_password = value;
					this.SendPropertyChanged("user_password");
					this.Onuser_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_is_admin", DbType="Bit NOT NULL")]
		public bool user_is_admin
		{
			get
			{
				return this._user_is_admin;
			}
			set
			{
				if ((this._user_is_admin != value))
				{
					this.Onuser_is_adminChanging(value);
					this.SendPropertyChanging();
					this._user_is_admin = value;
					this.SendPropertyChanged("user_is_admin");
					this.Onuser_is_adminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_signup", DbType="DateTime NOT NULL")]
		public System.DateTime user_signup
		{
			get
			{
				return this._user_signup;
			}
			set
			{
				if ((this._user_signup != value))
				{
					this.Onuser_signupChanging(value);
					this.SendPropertyChanging();
					this._user_signup = value;
					this.SendPropertyChanged("user_signup");
					this.Onuser_signupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_is_private", DbType="Bit NOT NULL")]
		public bool user_is_private
		{
			get
			{
				return this._user_is_private;
			}
			set
			{
				if ((this._user_is_private != value))
				{
					this.Onuser_is_privateChanging(value);
					this.SendPropertyChanging();
					this._user_is_private = value;
					this.SendPropertyChanged("user_is_private");
					this.Onuser_is_privateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_karma", DbType="Real NOT NULL")]
		public float user_karma
		{
			get
			{
				return this._user_karma;
			}
			set
			{
				if ((this._user_karma != value))
				{
					this.Onuser_karmaChanging(value);
					this.SendPropertyChanging();
					this._user_karma = value;
					this.SendPropertyChanged("user_karma");
					this.Onuser_karmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_picture", DbType="VarChar(MAX)")]
		public string user_picture
		{
			get
			{
				return this._user_picture;
			}
			set
			{
				if ((this._user_picture != value))
				{
					this.Onuser_pictureChanging(value);
					this.SendPropertyChanging();
					this._user_picture = value;
					this.SendPropertyChanged("user_picture");
					this.Onuser_pictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_group", Storage="_groups", ThisKey="user_id", OtherKey="user_id_owner")]
		public EntitySet<group> groups
		{
			get
			{
				return this._groups;
			}
			set
			{
				this._groups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_vote", Storage="_votes", ThisKey="user_id", OtherKey="vote_author")]
		public EntitySet<vote> votes
		{
			get
			{
				return this._votes;
			}
			set
			{
				this._votes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_group_join_request", Storage="_group_join_requests", ThisKey="user_id", OtherKey="user_id_request")]
		public EntitySet<group_join_request> group_join_requests
		{
			get
			{
				return this._group_join_requests;
			}
			set
			{
				this._group_join_requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_groups_users_subscription", Storage="_groups_users_subscriptions", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<groups_users_subscription> groups_users_subscriptions
		{
			get
			{
				return this._groups_users_subscriptions;
			}
			set
			{
				this._groups_users_subscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_place_tag_users_subscription", Storage="_place_tag_users_subscriptions", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<place_tag_users_subscription> place_tag_users_subscriptions
		{
			get
			{
				return this._place_tag_users_subscriptions;
			}
			set
			{
				this._place_tag_users_subscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_tags_users_subscription", Storage="_tags_users_subscriptions", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<tags_users_subscription> tags_users_subscriptions
		{
			get
			{
				return this._tags_users_subscriptions;
			}
			set
			{
				this._tags_users_subscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_token", Storage="_tokens", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<token> tokens
		{
			get
			{
				return this._tokens;
			}
			set
			{
				this._tokens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_follow_request", Storage="_user_follow_requests", ThisKey="user_id", OtherKey="user_id_request")]
		public EntitySet<user_follow_request> user_follow_requests
		{
			get
			{
				return this._user_follow_requests;
			}
			set
			{
				this._user_follow_requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_follow_request1", Storage="_user_follow_requests1", ThisKey="user_id", OtherKey="user_id_requested")]
		public EntitySet<user_follow_request> user_follow_requests1
		{
			get
			{
				return this._user_follow_requests1;
			}
			set
			{
				this._user_follow_requests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_follow", Storage="_user_follows", ThisKey="user_id", OtherKey="user_id_follower")]
		public EntitySet<user_follow> user_follows
		{
			get
			{
				return this._user_follows;
			}
			set
			{
				this._user_follows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_follow1", Storage="_user_follows1", ThisKey="user_id", OtherKey="user_id_followed")]
		public EntitySet<user_follow> user_follows1
		{
			get
			{
				return this._user_follows1;
			}
			set
			{
				this._user_follows1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_in_publication", Storage="_user_in_publications", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<user_in_publication> user_in_publications
		{
			get
			{
				return this._user_in_publications;
			}
			set
			{
				this._user_in_publications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_publication", Storage="_publications", ThisKey="user_id", OtherKey="user_id_author")]
		public EntitySet<publication> publications
		{
			get
			{
				return this._publications;
			}
			set
			{
				this._publications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_tag_user", Storage="_place_tag", ThisKey="user_default_place", OtherKey="place_tag_id", IsForeignKey=true)]
		public place_tag place_tag
		{
			get
			{
				return this._place_tag.Entity;
			}
			set
			{
				place_tag previousValue = this._place_tag.Entity;
				if (((previousValue != value) 
							|| (this._place_tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._place_tag.Entity = null;
						previousValue.users.Remove(this);
					}
					this._place_tag.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._user_default_place = value.place_tag_id;
					}
					else
					{
						this._user_default_place = default(long);
					}
					this.SendPropertyChanged("place_tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_groups(group entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_groups(group entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_votes(vote entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_votes(vote entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_group_join_requests(group_join_request entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_group_join_requests(group_join_request entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_groups_users_subscriptions(groups_users_subscription entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_groups_users_subscriptions(groups_users_subscription entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_place_tag_users_subscriptions(place_tag_users_subscription entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_place_tag_users_subscriptions(place_tag_users_subscription entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_tags_users_subscriptions(tags_users_subscription entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_tags_users_subscriptions(tags_users_subscription entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_tokens(token entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_tokens(token entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_user_follow_requests(user_follow_request entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_user_follow_requests(user_follow_request entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_user_follow_requests1(user_follow_request entity)
		{
			this.SendPropertyChanging();
			entity.user1 = this;
		}
		
		private void detach_user_follow_requests1(user_follow_request entity)
		{
			this.SendPropertyChanging();
			entity.user1 = null;
		}
		
		private void attach_user_follows(user_follow entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_user_follows(user_follow entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_user_follows1(user_follow entity)
		{
			this.SendPropertyChanging();
			entity.user1 = this;
		}
		
		private void detach_user_follows1(user_follow entity)
		{
			this.SendPropertyChanging();
			entity.user1 = null;
		}
		
		private void attach_user_in_publications(user_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_user_in_publications(user_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_publications(publication entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_publications(publication entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.publication")]
	public partial class publication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _publication_id;
		
		private string _publication_text;
		
		private long _user_id_author;
		
		private System.DateTime _publication_datetime;
		
		private long _place_tag_id;
		
		private System.Nullable<bool> _publication_is_question;
		
		private System.Nullable<long> _publication_answer_to;
		
		private bool _publlication_is_private;
		
		private float _publication_karma;
		
		private System.Nullable<int> _positive_votes;
		
		private System.Nullable<int> _negative_votes;
		
		private EntitySet<vote> _votes;
		
		private EntitySet<group_in_publication> _group_in_publications;
		
		private EntitySet<place_tag_in_publication> _place_tag_in_publications;
		
		private EntitySet<tag_in_publication> _tag_in_publications;
		
		private EntitySet<user_in_publication> _user_in_publications;
		
		private EntityRef<place_tag> _place_tag;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpublication_idChanging(long value);
    partial void Onpublication_idChanged();
    partial void Onpublication_textChanging(string value);
    partial void Onpublication_textChanged();
    partial void Onuser_id_authorChanging(long value);
    partial void Onuser_id_authorChanged();
    partial void Onpublication_datetimeChanging(System.DateTime value);
    partial void Onpublication_datetimeChanged();
    partial void Onplace_tag_idChanging(long value);
    partial void Onplace_tag_idChanged();
    partial void Onpublication_is_questionChanging(System.Nullable<bool> value);
    partial void Onpublication_is_questionChanged();
    partial void Onpublication_answer_toChanging(System.Nullable<long> value);
    partial void Onpublication_answer_toChanged();
    partial void Onpubllication_is_privateChanging(bool value);
    partial void Onpubllication_is_privateChanged();
    partial void Onpublication_karmaChanging(float value);
    partial void Onpublication_karmaChanged();
    partial void Onpositive_votesChanging(System.Nullable<int> value);
    partial void Onpositive_votesChanged();
    partial void Onnegative_votesChanging(System.Nullable<int> value);
    partial void Onnegative_votesChanged();
    #endregion
		
		public publication()
		{
			this._votes = new EntitySet<vote>(new Action<vote>(this.attach_votes), new Action<vote>(this.detach_votes));
			this._group_in_publications = new EntitySet<group_in_publication>(new Action<group_in_publication>(this.attach_group_in_publications), new Action<group_in_publication>(this.detach_group_in_publications));
			this._place_tag_in_publications = new EntitySet<place_tag_in_publication>(new Action<place_tag_in_publication>(this.attach_place_tag_in_publications), new Action<place_tag_in_publication>(this.detach_place_tag_in_publications));
			this._tag_in_publications = new EntitySet<tag_in_publication>(new Action<tag_in_publication>(this.attach_tag_in_publications), new Action<tag_in_publication>(this.detach_tag_in_publications));
			this._user_in_publications = new EntitySet<user_in_publication>(new Action<user_in_publication>(this.attach_user_in_publications), new Action<user_in_publication>(this.detach_user_in_publications));
			this._place_tag = default(EntityRef<place_tag>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publication_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long publication_id
		{
			get
			{
				return this._publication_id;
			}
			set
			{
				if ((this._publication_id != value))
				{
					this.Onpublication_idChanging(value);
					this.SendPropertyChanging();
					this._publication_id = value;
					this.SendPropertyChanged("publication_id");
					this.Onpublication_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publication_text", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string publication_text
		{
			get
			{
				return this._publication_text;
			}
			set
			{
				if ((this._publication_text != value))
				{
					this.Onpublication_textChanging(value);
					this.SendPropertyChanging();
					this._publication_text = value;
					this.SendPropertyChanged("publication_text");
					this.Onpublication_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id_author", DbType="BigInt NOT NULL")]
		public long user_id_author
		{
			get
			{
				return this._user_id_author;
			}
			set
			{
				if ((this._user_id_author != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_id_authorChanging(value);
					this.SendPropertyChanging();
					this._user_id_author = value;
					this.SendPropertyChanged("user_id_author");
					this.Onuser_id_authorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publication_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime publication_datetime
		{
			get
			{
				return this._publication_datetime;
			}
			set
			{
				if ((this._publication_datetime != value))
				{
					this.Onpublication_datetimeChanging(value);
					this.SendPropertyChanging();
					this._publication_datetime = value;
					this.SendPropertyChanged("publication_datetime");
					this.Onpublication_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_place_tag_id", DbType="BigInt NOT NULL")]
		public long place_tag_id
		{
			get
			{
				return this._place_tag_id;
			}
			set
			{
				if ((this._place_tag_id != value))
				{
					if (this._place_tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplace_tag_idChanging(value);
					this.SendPropertyChanging();
					this._place_tag_id = value;
					this.SendPropertyChanged("place_tag_id");
					this.Onplace_tag_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publication_is_question", DbType="Bit")]
		public System.Nullable<bool> publication_is_question
		{
			get
			{
				return this._publication_is_question;
			}
			set
			{
				if ((this._publication_is_question != value))
				{
					this.Onpublication_is_questionChanging(value);
					this.SendPropertyChanging();
					this._publication_is_question = value;
					this.SendPropertyChanged("publication_is_question");
					this.Onpublication_is_questionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publication_answer_to", DbType="BigInt")]
		public System.Nullable<long> publication_answer_to
		{
			get
			{
				return this._publication_answer_to;
			}
			set
			{
				if ((this._publication_answer_to != value))
				{
					this.Onpublication_answer_toChanging(value);
					this.SendPropertyChanging();
					this._publication_answer_to = value;
					this.SendPropertyChanged("publication_answer_to");
					this.Onpublication_answer_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publlication_is_private", DbType="Bit NOT NULL")]
		public bool publlication_is_private
		{
			get
			{
				return this._publlication_is_private;
			}
			set
			{
				if ((this._publlication_is_private != value))
				{
					this.Onpubllication_is_privateChanging(value);
					this.SendPropertyChanging();
					this._publlication_is_private = value;
					this.SendPropertyChanged("publlication_is_private");
					this.Onpubllication_is_privateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publication_karma", DbType="Real NOT NULL")]
		public float publication_karma
		{
			get
			{
				return this._publication_karma;
			}
			set
			{
				if ((this._publication_karma != value))
				{
					this.Onpublication_karmaChanging(value);
					this.SendPropertyChanging();
					this._publication_karma = value;
					this.SendPropertyChanged("publication_karma");
					this.Onpublication_karmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_positive_votes", DbType="Int")]
		public System.Nullable<int> positive_votes
		{
			get
			{
				return this._positive_votes;
			}
			set
			{
				if ((this._positive_votes != value))
				{
					this.Onpositive_votesChanging(value);
					this.SendPropertyChanging();
					this._positive_votes = value;
					this.SendPropertyChanged("positive_votes");
					this.Onpositive_votesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_negative_votes", DbType="Int")]
		public System.Nullable<int> negative_votes
		{
			get
			{
				return this._negative_votes;
			}
			set
			{
				if ((this._negative_votes != value))
				{
					this.Onnegative_votesChanging(value);
					this.SendPropertyChanging();
					this._negative_votes = value;
					this.SendPropertyChanged("negative_votes");
					this.Onnegative_votesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publication_vote", Storage="_votes", ThisKey="publication_id", OtherKey="vote_publication")]
		public EntitySet<vote> votes
		{
			get
			{
				return this._votes;
			}
			set
			{
				this._votes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publication_group_in_publication", Storage="_group_in_publications", ThisKey="publication_id", OtherKey="publication_id")]
		public EntitySet<group_in_publication> group_in_publications
		{
			get
			{
				return this._group_in_publications;
			}
			set
			{
				this._group_in_publications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publication_place_tag_in_publication", Storage="_place_tag_in_publications", ThisKey="publication_id", OtherKey="publication_id")]
		public EntitySet<place_tag_in_publication> place_tag_in_publications
		{
			get
			{
				return this._place_tag_in_publications;
			}
			set
			{
				this._place_tag_in_publications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publication_tag_in_publication", Storage="_tag_in_publications", ThisKey="publication_id", OtherKey="publication_id")]
		public EntitySet<tag_in_publication> tag_in_publications
		{
			get
			{
				return this._tag_in_publications;
			}
			set
			{
				this._tag_in_publications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publication_user_in_publication", Storage="_user_in_publications", ThisKey="publication_id", OtherKey="publication_id")]
		public EntitySet<user_in_publication> user_in_publications
		{
			get
			{
				return this._user_in_publications;
			}
			set
			{
				this._user_in_publications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="place_tag_publication", Storage="_place_tag", ThisKey="place_tag_id", OtherKey="place_tag_id", IsForeignKey=true)]
		public place_tag place_tag
		{
			get
			{
				return this._place_tag.Entity;
			}
			set
			{
				place_tag previousValue = this._place_tag.Entity;
				if (((previousValue != value) 
							|| (this._place_tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._place_tag.Entity = null;
						previousValue.publications.Remove(this);
					}
					this._place_tag.Entity = value;
					if ((value != null))
					{
						value.publications.Add(this);
						this._place_tag_id = value.place_tag_id;
					}
					else
					{
						this._place_tag_id = default(long);
					}
					this.SendPropertyChanged("place_tag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_publication", Storage="_user", ThisKey="user_id_author", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.publications.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.publications.Add(this);
						this._user_id_author = value.user_id;
					}
					else
					{
						this._user_id_author = default(long);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_votes(vote entity)
		{
			this.SendPropertyChanging();
			entity.publication = this;
		}
		
		private void detach_votes(vote entity)
		{
			this.SendPropertyChanging();
			entity.publication = null;
		}
		
		private void attach_group_in_publications(group_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.publication = this;
		}
		
		private void detach_group_in_publications(group_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.publication = null;
		}
		
		private void attach_place_tag_in_publications(place_tag_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.publication = this;
		}
		
		private void detach_place_tag_in_publications(place_tag_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.publication = null;
		}
		
		private void attach_tag_in_publications(tag_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.publication = this;
		}
		
		private void detach_tag_in_publications(tag_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.publication = null;
		}
		
		private void attach_user_in_publications(user_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.publication = this;
		}
		
		private void detach_user_in_publications(user_in_publication entity)
		{
			this.SendPropertyChanging();
			entity.publication = null;
		}
	}
}
#pragma warning restore 1591
